buildscript {
    ext {
        springBootVersion = "2.1.6.RELEASE"
		dockerVersion = "1.2"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:${dockerVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group = "my.springboot.hello"
archivesBaseName = 'helloworld-spring-boot-gradle'
version = "0.0.1"

//bootJar {
//    baseName = 'helloworld-spring-boot-gradle'
//    version =  '0.1.0'
//}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
	springCloudVersion = 'Greenwich.RELEASE'
	springBootAdminVersion = "2.1.6"
 }

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
	// config client
	compile("org.springframework.cloud:spring-cloud-starter-config")
	// Admin client
	compile('de.codecentric:spring-boot-admin-starter-client')
	// Swagger2 - REST API Design/Development/Documentation
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	// Swagger UI
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	// Spring Cloud logging - Slueth
	// This amy work with Spring Cloud Edgware.RELEASE
	//compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth'
	//compile group: 'org.springframework.cloud', name: 'spring-cloud-sleuth-zipkin'
	// Spring Cloud logging - Zipkin
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-zipkin'	
	//compile ('org.springframework.cloud:spring-cloud-starter-sleuth')
    //testCompile("junit:junit")
	testCompile("org.springframework.boot:spring-boot-starter-test")
	//file client
	// version includded
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.10'
	//version excluded
	compile group: 'org.apache.httpcomponents', name: 'httpmime'
	//one more sintax
	compile ("org.apache.httpcomponents:httpcore")
	//version included
    //compile ("org.apache.httpcomponents:httpcore:4.4.12")
	// Flyway database upgrade
	compile('org.flywaydb:flyway-core')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('mysql:mysql-connector-java')
	// email
	compile('org.springframework.boot:spring-boot-starter-mail')
	//Hystrix
	compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
}

dependencyManagement {
	imports {
	   mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	   mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
 }
 

 task buildDocker(type: Docker, dependsOn: build) {
	 applicationName = jar.baseName
	 dockerfile = file('src/main/docker/Dockerfile')
	 doFirst {
		copy {
		   from jar
		   into stageDir
		}
	 }
 }
 